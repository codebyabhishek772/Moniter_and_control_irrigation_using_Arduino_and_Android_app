/*********************************************************************************************************** ***********************************HardWare Used in this Project********************************************1) Arduino MKR10002) Jump Wires  3) seeed grove -Relay4) Arduino Rural Hack kit5) An Android Device(Ardroid version more than 5.0) with installed Blynk App********************************************************************************************************///Defining the SPI, WiFi and Blynk libraries#define BLYNK_PRINT SerialUSB#include <SPI.h>#include <WiFi101.h>#include <BlynkSimpleWiFiShield101.h>// get Auth Token in the Blynk App From Your Android Device.// Go to the Project Settings.char auth[] = "xxxxxxxxxxx";// Your WiFi credentials use CMD and type IPconfig or Netsh wlan show Network for getting all info about network.// Set password to "" for open networks.char ssid[] = "xxxxxxxxxxx";char pass[] = "xxxxxxxxxxx";#include <I2CSoilMoistureSensor.h>#include <Wire.h>I2CSoilMoistureSensor soilMoistureSensor(0x60);float soilTemperature = 0;int soilMoisture = 0;int relayPin = 6;BlynkTimer timer;// This function sends Arduino's up time every second to Virtual Pin (5).// In the app, Widget's reading frequency should be set to PUSH. This means// that you define how to send data to Blynk App.void myTimerEvent(){    /**********************************************************************************************************************  ********************************get all the data from the soul moisture sensor******************************8***********  ************************************************************************************************************************/      while (soilMoistureSensor.isBusy()) delay(50); // available since FW 2.3    soilMoisture=soilMoistureSensor.getCapacitance();    soilTemperature=soilMoistureSensor.getTemperature()/(float)10;    soilMoistureSensor.sleep(); // available since FW 2.3  /*********************************************************************************************************************  ********************************************Send the data to blynk****************************************************  ***********************************************************************************************************************/  // You can send any value at any time.  // Please don't send more that 10 values per second.  Blynk.virtualWrite(V5, soilMoisture );  Serial.println(soilMoisture);  Blynk.virtualWrite(V6, soilTemperature );  Serial.println(soilTemperature);}// This function will be called every time Slider Widget// in Blynk app writes values to the Virtual Pin 1BLYNK_WRITE(V1) {  int pinValue = param.asInt(); // assigning incoming value from pin V1 to a variable  // You can also use:  // String i = param.asStr();  // double d = param.asDouble();  SerialUSB.print("V1 button is: ");  SerialUSB.println(pinValue);  if (pinValue == 1) {    digitalWrite(relayPin, HIGH);  } else {    digitalWrite(relayPin, LOW);  }}void setup(){  // Debug console  SerialUSB.begin(9600);  Blynk.begin(auth, ssid, pass);  // Setup a function to be called every second  timer.setInterval(1000L, myTimerEvent);    soilMoistureSensor.begin(); // reset sensor    delay(1000); // give some time to boot up    Serial.print("I2C Soil Moisture Sensor Address: ");    Serial.println(soilMoistureSensor.getAddress(),HEX);    Serial.print("Sensor Firmware version: ");    Serial.println(soilMoistureSensor.getVersion(),HEX);    Serial.println();  pinMode(2, OUTPUT);}void loop(){  Blynk.run();  timer.run(); // Initiates BlynkTimer}